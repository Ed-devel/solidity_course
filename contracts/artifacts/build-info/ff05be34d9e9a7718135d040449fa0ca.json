{
	"id": "ff05be34d9e9a7718135d040449fa0ca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/structDeclaration_32.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n// Vídeo 32 - Solidity Structs | Como declarar Solidity Structs\n\n/* É possível criar uma Struct em um arquivo separado e depois importá-lo\nem um contrato inteligente. Segue o exemplo abaixo: */\n\nstruct Todo{\n    string texto;\n    bool concluido;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"sources": {
			"contracts/structDeclaration_32.sol": {
				"ast": {
					"absolutePath": "contracts/structDeclaration_32.sol",
					"exportedSymbols": {
						"Todo": [
							6
						]
					},
					"id": 7,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"canonicalName": "Todo",
							"id": 6,
							"members": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "texto",
									"nameLocation": "281:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "274:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "274:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "concluido",
									"nameLocation": "297:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "292:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "292:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Todo",
							"nameLocation": "264:4:0",
							"nodeType": "StructDefinition",
							"scope": 7,
							"src": "257:52:0",
							"visibility": "public"
						}
					],
					"src": "32:277:0"
				},
				"id": 0
			}
		}
	}
}